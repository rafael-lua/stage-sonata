local GAME_STATE = require "modules.game_state"
local game_grid = require "modules.game_grid"
local hashes = require "modules.hashes"
local helpers = require "modules.helpers"

go.property("player", hash(""))
go.property("parent", msg.url())
go.property("cell_size", 60)
go.property("gap", 5)
go.property("rows", 7)
go.property("cols", 7)

function init(self)
    if self.player ~= hash("") then
        msg.post(".", "acquire_input_focus")
    end

    GAME_STATE:setGridInstance(
        self.player, game_grid.new(
            {
                cell_size = self.cell_size,
                gap = self.gap,
                rows = self.rows,
                cols = self.cols,
                x = 0,
                y = 0,
                player_id = self.player
            }
        )
    )
    GAME_STATE:getPlayer(self.player).grid.generateCells("#cell_spawner")

    go.set_parent(go.get_id(), self.parent)

    self.grabbing = false
end

function on_input(self, action_id, action)
    if self.player ~= hash("") then
        local grid_world_pos = go.get_world_position()

        -- Set the grab state variables.
        if action_id == hashes.input.touch then
            if action.pressed then
                self.grabbing = true
            elseif action.released then
                self.grabbing = false
            end
        end

        local player = GAME_STATE:getPlayer(self.player)
        local grid = player.grid

        -- Update the axis highlight when block is grabbed.
        grid.highlightAxis(self.grabbing)

        -- Click released anywhere in the screen, we place any selected block on the grid.
        -- The order matter, since there is a chance of releasing the input during a focus state
        -- and then a new focus is set on the same frame, causing issues in the placement.
        if (not self.grabbing and grid.state.selected) then
            grid.placeSelectedBlock()
            grid.checkMatches()
        end

        local col_index, row_index, isWithinGrid = grid.getFocusIndex(action, grid_world_pos)
        grid.updateFocus(col_index, row_index, isWithinGrid)

        -- Update selected block position to the cursor.
        local selectedBlock = grid.state.selected
        if selectedBlock then
            go.set_position(vmath.vector3(action.x, action.y, 0), selectedBlock.instance)
        end

        if isWithinGrid then
            local cellFocus = grid.state.focus
            local focus_has_block = grid.cells[cellFocus.col][cellFocus.row].props.block

            if (self.grabbing and focus_has_block and (not selectedBlock) and #player.is_moving == 0) then
                -- If player started to grab, the focus has a block, there is no current selected blocks 
                -- and also there is no current block movements: We select a new block.
                grid.selectBlock(action, "#block_selected")
            elseif (self.grabbing and selectedBlock) then
                -- Since the player already grabbed a block, we just update movement. 
                grid.makeSpace()
            end
        end
    end
end
